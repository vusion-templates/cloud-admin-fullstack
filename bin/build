#!/usr/bin/env node

/**
 * Install npm packages
 */
require('./micro');
const spawnSync = require('child_process').spawnSync;
function printStart(str) {
    console.log();
    console.log(`*****************| ${str} start |*******************`);
    console.log();
}
function printEnd(str) {
    console.log();
    console.log(`*****************| ${str} end |*******************`);
    console.log();
}
function printInfo(str) {
    console.log();
    console.log(str);
    console.log();
}

{
    printStart('npm run client:init');
    const result = spawnSync('npm', ['run','client:init'], {
        stdio: 'inherit',
    });
    if (result.status)
        throw new Error(String(result.stderr));
    printEnd('npm run client:init');
}

{
    printStart('npm run client:build');
    const result = spawnSync('npm', ['run','client:build'], {
        stdio: 'inherit',
    });
    if (result.status)
        throw new Error(String(result.stderr));
    printEnd('npm run client:build');
}

{
    printStart('rm -rf client');
    const result = spawnSync('rm', ['-rf', 'client'], {
        stdio: 'inherit',
    });
    if (result.status)
        throw new Error(String(result.stderr));
    printEnd('rm -rf client');
}
if (!process.env.isMicro) {
    printStart('npm run server:init');
    const result = spawnSync('npm', ['run','server:init'], {
        stdio: 'inherit',
    });
    if (result.status)
        throw new Error(String(result.stderr));
    printEnd('npm run server:init');
}
